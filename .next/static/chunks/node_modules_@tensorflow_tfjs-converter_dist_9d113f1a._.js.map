{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"flags.js","sourceRoot":"","sources":["file:///project/sandbox/user-workspace/node_modules/%40tensorflow/tfjs-converter/dist/flags.js/__/__/__/__/__/tfjs-converter/src/flags.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from '@tensorflow/tfjs-core';\n\nconst ENV = env();\n\n/** Whether to keep intermediate tensors. */\nENV.registerFlag('KEEP_INTERMEDIATE_TENSORS', () => false, debugValue => {\n  if (debugValue) {\n    console.warn(\n        'Keep intermediate tensors is ON. This will print the values of all ' +\n        'intermediate tensors during model inference. Not all models ' +\n        'support this mode. For details, check e2e/benchmarks/ ' +\n        'model_config.js. This significantly impacts performance.');\n  }\n});\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;;AAEH,OAAO,EAAC,GAAG,EAAC,MAAM,uBAAuB,CAAC;;AAE1C,MAAM,GAAG,8KAAG,MAAA,AAAG,EAAE,CAAC;AAElB,0CAAA,EAA4C,CAC5C,GAAG,CAAC,YAAY,CAAC,2BAA2B,EAAE,GAAG,CAAG,CAAD,IAAM,GAAE,UAAU,CAAC,EAAE;IACtE,IAAI,UAAU,EAAE;QACd,OAAO,CAAC,IAAI,CACR,qEAAqE,GACrE,8DAA8D,GAC9D,wDAAwD,GACxD,0DAA0D,CAAC,CAAC;KACjE;AACH,CAAC,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"file":"compiled_api.js","sourceRoot":"","sources":["file:///project/sandbox/user-workspace/node_modules/%40tensorflow/tfjs-converter/dist/data/compiled_api.js/__/__/__/__/__/__/tfjs-converter/src/data/compiled_api.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\n/* tslint:disable */\n\n/** Properties of an Any. */\nexport declare interface IAny {\n  /** Any typeUrl */\n  typeUrl?: (string|null);\n\n  /** Any value */\n  value?: (Uint8Array|null);\n}\n\n/** DataType enum. */\nexport enum DataType {\n  // These properties must be quoted since they are used by parseDtypeParam\n  // in tfjs-converter/src/operations/operation_mapper.ts to look up dtypes\n  // by string name. If they are not quoted, Closure will mangle their names.\n\n  // Not a legal value for DataType.  Used to indicate a DataType field\n  // has not been set.\n  'DT_INVALID' = 0,\n\n  // Data types that all computation devices are expected to be\n  // capable to support.\n  'DT_FLOAT' = 1,\n  'DT_DOUBLE' = 2,\n  'DT_INT32' = 3,\n  'DT_UINT8' = 4,\n  'DT_INT16' = 5,\n  'DT_INT8' = 6,\n  'DT_STRING' = 7,\n  'DT_COMPLEX64' = 8,  // Single-precision complex\n  'DT_INT64' = 9,\n  'DT_BOOL' = 10,\n  'DT_QINT8' = 11,     // Quantized int8\n  'DT_QUINT8' = 12,    // Quantized uint8\n  'DT_QINT32' = 13,    // Quantized int32\n  'DT_BFLOAT16' = 14,  // Float32 truncated to 16 bits.  Only for cast ops.\n  'DT_QINT16' = 15,    // Quantized int16\n  'DT_QUINT16' = 16,   // Quantized uint16\n  'DT_UINT16' = 17,\n  'DT_COMPLEX128' = 18,  // Double-precision complex\n  'DT_HALF' = 19,\n  'DT_RESOURCE' = 20,\n  'DT_VARIANT' = 21,  // Arbitrary C++ data types\n  'DT_UINT32' = 22,\n  'DT_UINT64' = 23,\n\n  // Do not use!  These are only for parameters.  Every enum above\n  // should have a corresponding value below (verified by types_test).\n  'DT_FLOAT_REF' = 101,\n  'DT_DOUBLE_REF' = 102,\n  'DT_INT32_REF' = 103,\n  'DT_UINT8_REF' = 104,\n  'DT_INT16_REF' = 105,\n  'DT_INT8_REF' = 106,\n  'DT_STRING_REF' = 107,\n  'DT_COMPLEX64_REF' = 108,\n  'DT_INT64_REF' = 109,\n  'DT_BOOL_REF' = 110,\n  'DT_QINT8_REF' = 111,\n  'DT_QUINT8_REF' = 112,\n  'DT_QINT32_REF' = 113,\n  'DT_BFLOAT16_REF' = 114,\n  'DT_QINT16_REF' = 115,\n  'DT_QUINT16_REF' = 116,\n  'DT_UINT16_REF' = 117,\n  'DT_COMPLEX128_REF' = 118,\n  'DT_HALF_REF' = 119,\n  'DT_RESOURCE_REF' = 120,\n  'DT_VARIANT_REF' = 121,\n  'DT_UINT32_REF' = 122,\n  'DT_UINT64_REF' = 123,\n}\n\n/** Properties of a TensorShape. */\nexport declare interface ITensorShape {\n  /** TensorShape dim */\n  dim?: (TensorShape.IDim[]|null);\n\n  /** TensorShape unknownRank */\n  unknownRank?: (boolean|null);\n}\n\nexport namespace TensorShape {\n  /** Properties of a Dim. */\n  export declare interface IDim {\n    /** Dim size */\n    size?: (number|string|null);\n\n    /** Dim name */\n    name?: (string|null);\n  }\n}\n\n/** Properties of a Tensor. */\nexport declare interface ITensor {\n  /** Tensor dtype */\n  dtype?: (DataType|null);\n\n  /** Tensor tensorShape */\n  tensorShape?: (ITensorShape|null);\n\n  /** Tensor versionNumber */\n  versionNumber?: (number|null);\n\n  /** Tensor tensorContent */\n  tensorContent?: (Uint8Array|null);\n\n  /** Tensor floatVal */\n  floatVal?: (number[]|null);\n\n  /** Tensor doubleVal */\n  doubleVal?: (number[]|null);\n\n  /** Tensor intVal */\n  intVal?: (number[]|null);\n\n  /** Tensor stringVal */\n  stringVal?: (Uint8Array[]|null);\n\n  /** Tensor scomplexVal */\n  scomplexVal?: (number[]|null);\n\n  /** Tensor int64Val */\n  int64Val?: ((number | string)[]|null);\n\n  /** Tensor boolVal */\n  boolVal?: (boolean[]|null);\n\n  /** Tensor uint32Val */\n  uint32Val?: (number[]|null);\n\n  /** Tensor uint64Val */\n  uint64Val?: ((number | string)[]|null);\n}\n\n/** Properties of an AttrValue. */\nexport declare interface IAttrValue {\n  /** AttrValue list */\n  list?: (AttrValue.IListValue|null);\n\n  /** AttrValue s */\n  s?: (string|null);\n\n  /** AttrValue i */\n  i?: (number|string|null);\n\n  /** AttrValue f */\n  f?: (number|null);\n\n  /** AttrValue b */\n  b?: (boolean|null);\n\n  /** AttrValue type */\n  type?: (DataType|null);\n\n  /** AttrValue shape */\n  shape?: (ITensorShape|null);\n\n  /** AttrValue tensor */\n  tensor?: (ITensor|null);\n\n  /** AttrValue placeholder */\n  placeholder?: (string|null);\n\n  /** AttrValue func */\n  func?: (INameAttrList|null);\n}\n\nexport namespace AttrValue {\n  /** Properties of a ListValue. */\n  export declare interface IListValue {\n    /** ListValue s */\n    s?: (string[]|null);\n\n    /** ListValue i */\n    i?: ((number | string)[]|null);\n\n    /** ListValue f */\n    f?: (number[]|null);\n\n    /** ListValue b */\n    b?: (boolean[]|null);\n\n    /** ListValue type */\n    type?: (DataType[]|null);\n\n    /** ListValue shape */\n    shape?: (ITensorShape[]|null);\n\n    /** ListValue tensor */\n    tensor?: (ITensor[]|null);\n\n    /** ListValue func */\n    func?: (INameAttrList[]|null);\n  }\n}\n\n/** Properties of a NameAttrList. */\nexport declare interface INameAttrList {\n  /** NameAttrList name */\n  name?: (string|null);\n\n  /** NameAttrList attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n}\n\n/** Properties of a NodeDef. */\nexport declare interface INodeDef {\n  /** NodeDef name */\n  name?: (string|null);\n\n  /** NodeDef op */\n  op?: (string|null);\n\n  /** NodeDef input */\n  input?: (string[]|null);\n\n  /** NodeDef device */\n  device?: (string|null);\n\n  /** NodeDef attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n}\n\n/** Properties of a VersionDef. */\nexport declare interface IVersionDef {\n  /** VersionDef producer */\n  producer?: (number|null);\n\n  /** VersionDef minConsumer */\n  minConsumer?: (number|null);\n\n  /** VersionDef badConsumers */\n  badConsumers?: (number[]|null);\n}\n\n/** Properties of a GraphDef. */\nexport declare interface IGraphDef {\n  /** GraphDef node */\n  node?: (INodeDef[]|null);\n\n  /** GraphDef versions */\n  versions?: (IVersionDef|null);\n\n  /** GraphDef library */\n  library?: (IFunctionDefLibrary|null);\n}\n\n/** Properties of a CollectionDef. */\nexport declare interface ICollectionDef {\n  /** CollectionDef nodeList */\n  nodeList?: (CollectionDef.INodeList|null);\n\n  /** CollectionDef bytesList */\n  bytesList?: (CollectionDef.IBytesList|null);\n\n  /** CollectionDef int64List */\n  int64List?: (CollectionDef.IInt64List|null);\n\n  /** CollectionDef floatList */\n  floatList?: (CollectionDef.IFloatList|null);\n\n  /** CollectionDef anyList */\n  anyList?: (CollectionDef.IAnyList|null);\n}\n\nexport namespace CollectionDef {\n  /** Properties of a NodeList. */\n  export declare interface INodeList {\n    /** NodeList value */\n    value?: (string[]|null);\n  }\n\n  /** Properties of a BytesList. */\n  export declare interface IBytesList {\n    /** BytesList value */\n    value?: (Uint8Array[]|null);\n  }\n\n  /** Properties of an Int64List. */\n  export declare interface IInt64List {\n    /** Int64List value */\n    value?: ((number | string)[]|null);\n  }\n\n  /** Properties of a FloatList. */\n  export declare interface IFloatList {\n    /** FloatList value */\n    value?: (number[]|null);\n  }\n\n  /** Properties of an AnyList. */\n  export declare interface IAnyList {\n    /** AnyList value */\n    value?: (IAny[]|null);\n  }\n}\n\n/** Properties of a SaverDef. */\nexport declare interface ISaverDef {\n  /** SaverDef filenameTensorName */\n  filenameTensorName?: (string|null);\n\n  /** SaverDef saveTensorName */\n  saveTensorName?: (string|null);\n\n  /** SaverDef restoreOpName */\n  restoreOpName?: (string|null);\n\n  /** SaverDef maxToKeep */\n  maxToKeep?: (number|null);\n\n  /** SaverDef sharded */\n  sharded?: (boolean|null);\n\n  /** SaverDef keepCheckpointEveryNHours */\n  keepCheckpointEveryNHours?: (number|null);\n\n  /** SaverDef version */\n  version?: (SaverDef.CheckpointFormatVersion|null);\n}\n\nexport namespace SaverDef {\n  /** CheckpointFormatVersion enum. */\n  export enum CheckpointFormatVersion {'LEGACY' = 0, 'V1' = 1, 'V2' = 2}\n}\n\n/** Properties of a TensorInfo. */\nexport declare interface ITensorInfo {\n  /** TensorInfo name */\n  name?: (string|null);\n\n  /** TensorInfo cooSparse */\n  cooSparse?: (TensorInfo.ICooSparse|null);\n\n  /** TensorInfo dtype */\n  dtype?: (DataType|string|null);\n\n  /** TensorInfo tensorShape */\n  tensorShape?: (ITensorShape|null);\n\n  /** Resource id tensor was originally assigned to.  */\n  resourceId?: (number|null);\n}\n\nexport namespace TensorInfo {\n  /** Properties of a CooSparse. */\n  export declare interface ICooSparse {\n    /** CooSparse valuesTensorName */\n    valuesTensorName?: (string|null);\n\n    /** CooSparse indicesTensorName */\n    indicesTensorName?: (string|null);\n\n    /** CooSparse denseShapeTensorName */\n    denseShapeTensorName?: (string|null);\n  }\n}\n\n/** Properties of a SignatureDef. */\nexport declare interface ISignatureDef {\n  /** SignatureDef inputs */\n  inputs?: ({[k: string]: ITensorInfo}|null);\n\n  /** SignatureDef outputs */\n  outputs?: ({[k: string]: ITensorInfo}|null);\n\n  /** SignatureDef methodName */\n  methodName?: (string|null);\n}\n\n/** Properties of an AssetFileDef. */\nexport declare interface IAssetFileDef {\n  /** AssetFileDef tensorInfo */\n  tensorInfo?: (ITensorInfo|null);\n\n  /** AssetFileDef filename */\n  filename?: (string|null);\n}\n\n/** Properties of an OpDef. */\nexport declare interface IOpDef {\n  /** OpDef name */\n  name?: (string|null);\n\n  /** OpDef inputArg */\n  inputArg?: (OpDef.IArgDef[]|null);\n\n  /** OpDef outputArg */\n  outputArg?: (OpDef.IArgDef[]|null);\n\n  /** OpDef attr */\n  attr?: (OpDef.IAttrDef[]|null);\n\n  /** OpDef deprecation */\n  deprecation?: (OpDef.IOpDeprecation|null);\n\n  /** OpDef summary */\n  summary?: (string|null);\n\n  /** OpDef description */\n  description?: (string|null);\n\n  /** OpDef isCommutative */\n  isCommutative?: (boolean|null);\n\n  /** OpDef isAggregate */\n  isAggregate?: (boolean|null);\n\n  /** OpDef isStateful */\n  isStateful?: (boolean|null);\n\n  /** OpDef allowsUninitializedInput */\n  allowsUninitializedInput?: (boolean|null);\n}\n\nexport namespace OpDef {\n  /** Properties of an ArgDef. */\n  export declare interface IArgDef {\n    /** ArgDef name */\n    name?: (string|null);\n\n    /** ArgDef description */\n    description?: (string|null);\n\n    /** ArgDef type */\n    type?: (DataType|null);\n\n    /** ArgDef typeAttr */\n    typeAttr?: (string|null);\n\n    /** ArgDef numberAttr */\n    numberAttr?: (string|null);\n\n    /** ArgDef typeListAttr */\n    typeListAttr?: (string|null);\n\n    /** ArgDef isRef */\n    isRef?: (boolean|null);\n  }\n\n  /** Properties of an AttrDef. */\n  export declare interface IAttrDef {\n    /** AttrDef name */\n    name?: (string|null);\n\n    /** AttrDef type */\n    type?: (string|null);\n\n    /** AttrDef defaultValue */\n    defaultValue?: (IAttrValue|null);\n\n    /** AttrDef description */\n    description?: (string|null);\n\n    /** AttrDef hasMinimum */\n    hasMinimum?: (boolean|null);\n\n    /** AttrDef minimum */\n    minimum?: (number|string|null);\n\n    /** AttrDef allowedValues */\n    allowedValues?: (IAttrValue|null);\n  }\n\n  /** Properties of an OpDeprecation. */\n  export declare interface IOpDeprecation {\n    /** OpDeprecation version */\n    version?: (number|null);\n\n    /** OpDeprecation explanation */\n    explanation?: (string|null);\n  }\n}\n\n/** Properties of an OpList. */\nexport declare interface IOpList {\n  /** OpList op */\n  op?: (IOpDef[]|null);\n}\n\n/** Properties of a MetaGraphDef. */\nexport declare interface IMetaGraphDef {\n  /** MetaGraphDef metaInfoDef */\n  metaInfoDef?: (MetaGraphDef.IMetaInfoDef|null);\n\n  /** MetaGraphDef graphDef */\n  graphDef?: (IGraphDef|null);\n\n  /** MetaGraphDef saverDef */\n  saverDef?: (ISaverDef|null);\n\n  /** MetaGraphDef collectionDef */\n  collectionDef?: ({[k: string]: ICollectionDef}|null);\n\n  /** MetaGraphDef signatureDef */\n  signatureDef?: ({[k: string]: ISignatureDef}|null);\n\n  /** MetaGraphDef assetFileDef */\n  assetFileDef?: (IAssetFileDef[]|null);\n}\n\nexport namespace MetaGraphDef {\n  /** Properties of a MetaInfoDef. */\n  export declare interface IMetaInfoDef {\n    /** MetaInfoDef metaGraphVersion */\n    metaGraphVersion?: (string|null);\n\n    /** MetaInfoDef strippedOpList */\n    strippedOpList?: (IOpList|null);\n\n    /** MetaInfoDef anyInfo */\n    anyInfo?: (IAny|null);\n\n    /** MetaInfoDef tags */\n    tags?: (string[]|null);\n\n    /** MetaInfoDef tensorflowVersion */\n    tensorflowVersion?: (string|null);\n\n    /** MetaInfoDef tensorflowGitVersion */\n    tensorflowGitVersion?: (string|null);\n  }\n}\n\n/** Properties of a SavedModel. */\nexport declare interface ISavedModel {\n  /** SavedModel savedModelSchemaVersion */\n  savedModelSchemaVersion?: (number|string|null);\n\n  /** SavedModel metaGraphs */\n  metaGraphs?: (IMetaGraphDef[]|null);\n}\n\n/** Properties of a FunctionDefLibrary. */\nexport declare interface IFunctionDefLibrary {\n  /** FunctionDefLibrary function */\n  'function'?: (IFunctionDef[]|null);\n\n  /** FunctionDefLibrary gradient */\n  gradient?: (IGradientDef[]|null);\n}\n\n/** Properties of a FunctionDef. */\nexport declare interface IFunctionDef {\n  /** FunctionDef signature */\n  signature?: (IOpDef|null);\n\n  /** FunctionDef attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n\n  /** FunctionDef nodeDef */\n  nodeDef?: (INodeDef[]|null);\n\n  /** FunctionDef ret */\n  ret?: ({[k: string]: string}|null);\n}\n\n/** Properties of a GradientDef. */\nexport declare interface IGradientDef {\n  /** GradientDef functionName */\n  functionName?: (string|null);\n\n  /** GradientDef gradientFunc */\n  gradientFunc?: (string|null);\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"file":"version.js","sourceRoot":"","sources":["file:///project/sandbox/user-workspace/node_modules/%40tensorflow/tfjs-converter/dist/version.js/__/__/__/__/__/tfjs-converter/src/version.ts"],"sourcesContent":["/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '4.22.0';\nexport {version};\n"],"names":[],"mappings":"AAAA,mCAAA,EAAqC,CAErC,wDAAwD;;;;AACxD,MAAM,OAAO,GAAG,QAAQ,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"file":"index.js","sourceRoot":"","sources":["file:///project/sandbox/user-workspace/node_modules/%40tensorflow/tfjs-converter/dist/index.js/__/__/__/__/__/tfjs-converter/src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags';\n\nexport {IAttrValue, INameAttrList, INodeDef, ITensor, ITensorShape} from './data/compiled_api';\nexport {GraphModel, loadGraphModel, loadGraphModelSync} from './executor/graph_model';\nexport {deregisterOp, registerOp} from './operations/custom_op/register';\nexport {GraphNode, OpExecutor} from './operations/types';\nexport {version as version_converter} from './version';\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AACH,OAAO,SAAS,CAAC;AAGjB,OAAO,EAAC,UAAU,EAAE,cAAc,EAAE,kBAAkB,EAAC,MAAM,wBAAwB,CAAC;AACtF,OAAO,EAAC,YAAY,EAAE,UAAU,EAAC,MAAM,iCAAiC,CAAC;AAEzE,OAAO,EAAC,OAAO,IAAI,iBAAiB,EAAC,MAAM,WAAW,CAAC","ignoreList":[0],"debugId":null}}]
}